<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="ConveyorCTLMultiCast" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PE" />
        <With Var="Block" />
        <With Var="Candidate" />
        <With Var="GrantIn" />
      </Event>
      <Event Name="CAS_STOP" >
      </Event>
      <Event Name="CAS_START" >
      </Event>
      <Event Name="TimeStampIn" >
        <With Var="LamportIN" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="MotoRotate" />
        <With Var="BlockCon" />
        <With Var="GrantOut" />
      </Event>
      <Event Name="STOP" >
      </Event>
      <Event Name="START" >
      </Event>
      <Event Name="TimeStampOut" >
        <With Var="LamportOUT" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PE" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="Block" Type="BOOL" />
      <VarDeclaration Name="Candidate" Type="BOOL" />
      <VarDeclaration Name="LamportIN" Type="INT" />
      <VarDeclaration Name="PE14" Type="BOOL" />
      <VarDeclaration Name="GrantIn" Type="BOOL" />
      <VarDeclaration Name="ID" Type="INT" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="MotoRotate" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="BlockCon" Type="BOOL" />
      <VarDeclaration Name="LamportOUT" Type="INT" />
      <VarDeclaration Name="GrantOut" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastPE" Type="BOOL" InitialValue="1" />
      <VarDeclaration Name="lastBlock" Type="BOOL" InitialValue="0" />
      <VarDeclaration Name="lamportClock" Type="INT" />
    </InternalVars>
    <ECC >
      <ECState Name="START" Comment="Initial State" x="552.94116" y="429.41174" >
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="923.5294" y="141.17647" >
        <ECAction Algorithm="INIT" Output="INITO" />
        <ECAction Output="CNF" />
      </ECState>
      <ECState Name="WAIT" x="694.1176" y="1176.4706" >
        <ECAction Algorithm="IncrementClock" Output="CNF" />
        <ECAction Algorithm="StopConveyor" Output="TimeStampOut" />
      </ECState>
      <ECState Name="DONT_WANT" x="1529.4117" y="505.88235" >
        <ECAction Algorithm="IncrementClock" Output="CNF" />
        <ECAction Algorithm="GrantAccess" />
      </ECState>
      <ECState Name="DECIDER" x="1217.6471" y="2464.7058" >
        <ECAction Algorithm="IncrementClock" />
        <ECAction Algorithm="CheckLamport" Output="CNF" />
      </ECState>
      <ECState Name="ENTER_CS" x="3052.9412" y="2611.7646" >
        <ECAction Algorithm="IncrementClock" Output="CNF" />
        <ECAction Algorithm="StartConveyor" />
      </ECState>
      <ECState Name="EXIT_CS" x="3594.1177" y="947.0588" >
        <ECAction Algorithm="ResetLamport" Output="CNF" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="923.5294" y="429.41174" />
      <ECTransition Source="INIT" Destination="DONT_WANT" Condition="1" x="1317.647" y="358.82352" />
      <ECTransition Source="DONT_WANT" Destination="WAIT" Condition="REQ&#38;!PE" x="700.0" y="988.2353" />
      <ECTransition Source="WAIT" Destination="DECIDER" Condition="TimeStampIn&#38;!GrantIn" x="923.5294" y="2223.5293" />
      <ECTransition Source="DECIDER" Destination="WAIT" Condition="REQ&#38;!GrantOut" x="235.29411" y="2317.647" />
      <ECTransition Source="DECIDER" Destination="ENTER_CS" Condition="REQ&#38;GrantIn" x="2829.4116" y="3535.294" />
      <ECTransition Source="ENTER_CS" Destination="EXIT_CS" Condition="REQ&#38;PE" x="4564.7056" y="1741.1764" />
      <ECTransition Source="EXIT_CS" Destination="DONT_WANT" Condition="REQ&#38;!PE14" x="2452.9412" y="123.52941" />
      <ECTransition Source="WAIT" Destination="ENTER_CS" Condition="TimeStampIn&#38;GrantIn" x="2305.8823" y="1964.7058" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <ST Text="MotoRotate := TRUE;&#10;Block := FALSE;&#10;lamportClock := 0;&#10;&#10;&#10;System.out.println(&#34;Conveyor: &#34;+ID+&#34; Multicast INIT&#34;);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <ST Text="System.out.println(this +  &#34; -> Candidate&#34; + Candidate);&#10;IF Candidate THEN&#10;IF lastPE !:= PE THEN&#10;IF NOT PE THEN&#10;BlockCon:= TRUE;&#10;System.out.println(&#34;BlockCon = true&#34;);&#10;ELSE&#10;BlockCon:=FALSE;&#10;System.out.println(&#34;BlockCon = false&#34;);&#10;END_IF&#10;lastPE := PE;&#10;END_IF&#10;IF lastBlock !:= Block THEN&#10;IF Block THEN&#10;STOP.serviceEvent(this);&#10;MotoRotate := FALSE;&#10;System.out.println(&#34;Cas Stop&#34;);&#10;ELSE&#10;START.serviceEvent(this);&#10;MotoRotate := TRUE;&#10;System.out.println(&#34;Cas Start&#34;);&#10;END_IF&#10;lastBlock := Block;&#10;END_IF&#10;END_IF&#10;" />
  </Algorithm>
  <Algorithm Name="START" >
    <ST Text="MotoRotate:=TRUE;&#10;System.out.println(this + &#34; Start &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Start &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="STOP" >
    <ST Text="MotoRotate := FALSE;&#10;System.out.println(this + &#34; Stop &#34; + MotoRotate);&#10;&#10;System.out.println(&#34;Stop &#34; + MotoRotate);&#10;" />
  </Algorithm>
  <Algorithm Name="CheckLamport" >
    <Other Language="Java" Text="System.out.println(&#34;Conveyor: &#34;+ ID.value +&#34; LamportIN:&#34;+ LamportIN.value + &#34; LAMPORTCLK:&#34; +lamportClock.value);&#10;&#10;if(LamportIN.value > lamportClock.value){&#10;GrantOut.value = true;&#10;System.out.println(ID.value + &#34; Own LamportClock is smaller!&#34;);&#10;}else{&#10;GrantOut.value = false;&#10;System.out.println(ID.value + &#34; Lamport IN is smaller!&#34;);&#10;}&#10;" />
  </Algorithm>
  <Algorithm Name="IncrementClock" >
    <Other Language="Java" Text="lamportClock.value++;&#10;" />
  </Algorithm>
  <Algorithm Name="GrantAccess" >
    <Other Language="Java" Text="System.out.println(&#34;Conveyor: &#34;+ID.value+ &#34; grants access&#34;);&#10;&#10;GrantOut.value = true;&#10;" />
  </Algorithm>
  <Algorithm Name="StopConveyor" >
    <Other Language="Java" Text="System.out.println(&#34;Conveyor: &#34;+ID.value + &#34; Stop Conveyor Multicast!&#34;);&#10;MotoRotate.value = false;&#10;" />
  </Algorithm>
  <Algorithm Name="StartConveyor" >
    <Other Language="Java" Text="GrantOut.value = false;&#10;&#10;MotoRotate.value = true;&#10;System.out.println(&#34;Conveyor: &#34;+ID.value +&#34; Start Conveyer Multicast&#34;);&#10;" />
  </Algorithm>
  <Algorithm Name="ResetLamport" >
    <Other Language="Java" Text="lamportClock.value = 0;&#10;System.out.println(&#34;Conveyor: &#34;+ ID.value + &#34; Reset the Lamport Clock&#34;);&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
